Import - Import is a command typically located within a program's File menu (File → Import...). Instead of opening standard file types, Import is often used for importing parts of files, program settings, plug-ins, or other unconventional file formats.







Export - In a personal computer application, to export is to convert a file into another format than the one it is currently in. Once the file is exported to the desired format (specified in its file name suffix), it can be opened and worked on by an application that recognizes and uses this format.







Default class - In many languages, the class name is used as the name for the class (the template itself), the name for the default constructor of the class (a subroutine that creates objects), and as the type of objects generated by instantiating the class; these distinct concepts are easily conflated. ...







Extends - The extends keyword extends a class (indicates that a class is inherited from another class). In Java, it is possible to inherit attributes and methods from one class to another. We group the "inheritance concept" into two categories: subclass (child) - the class that inherits from another class.






Constructor - A constructor is a special method of a class or structure in object-oriented programming that initializes a newly created object of that type. Whenever an object is created, the constructor is called automatically.






Super - The super keyword refers to superclass (parent) objects. It is used to call superclass methods, and to access the superclass constructor. The most common use of the super keyword is to eliminate the confusion between superclasses and subclasses that have methods with the same name.





This - From Wikipedia, the free encyclopedia. this, self, and Me are keywords used in some computer programming languages to refer to the object, class, or other entity of which the currently running code is a part.





Async - Async is short for “asynchronous”. It's easier to understand async if you first understand what “synchronous”, the opposite, means. ... Asynchronous code takes statements outside of the main program flow, allowing the code after the asynchronous call to be executed immediately without waiting.





Return - In programming, return is a statement that instructs a program to leave the subroutine and go back to the return address. ... In most programming languages, the return statement is either return or return value, where value is a variable or other information coming back from the subroutine





Fetch - The retrieval of data



Fetch is the retrieval of data by a software program, script, or hardware device. After being retrieved, the data is moved to an alternate location or displayed on a screen.





Then - The then() method in JavaScript has been defined in the Promise API and is used to deal with asynchronous tasks such as an API call. Previously, callback functions were used instead of this function which made the code difficult to maintain. Syntax: demo().






Responce - The Response interface of the Fetch API represents the response to a request. You can create a new Response object using the Response. Response() constructor, but you are more likely to encounter a Response object being returned as the result of another API operation—for example, a service worker Fetchevent

Represents a response from a web request initiated by fetch(). fetch(), Request and Response are a new, low level replacement for XMLHttpRequest.






JSON - The json() method of the Body mixin takes a Response stream and reads it to completion. It returns a promise which resolves with a JavaScript object that is the result of parsing the body text as JSON 







setState - setState function, which will accept an Object that will be eventually merged into Components current state. While it is technically possible to alter state by writing to this. state directly, it will not lead to the Component re-rendering with new data, and generally lead to state inconsistency.





.Catch - What Does Try/Catch Block Mean? "Try" and "catch" are keywords that represent the handling of exceptions due to data or coding errors during program execution. A try block is the block of code in which exceptions occur. A catch block catches and handles try block exceptions.







Component.Mount - componentDidMount. The componentDidMount() method is called after the component is rendered. This is where you run statements that requires that the component is already placed in the DOM.








Render - Rendering is the process of generating an image from a model (or models in what collectively could be called a scene file), by means of computer programs. Also, the results of such a model can be called a rendering.









Styles / Style - Programming style, also known as code style, is a set of rules or guidelines used when writing the source code for a computer program. It is often claimed that following a particular programming style will help programmers read and understand source code conforming to the style, and help to avoid introducing errors.








Container - A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. ... Available for both Linux and Windows-based applications, containerized software will always run the same, regardless of the infrastructure.









Else - In programming languages, an else statement is an alternative statement that is executed if the result of a previous test condition evaluates to false.

The else keyword is used in conditional statements (if statements), and decides what to do if the condition is False. The else keyword can also be use in try...







SubContainer - Sub Containers are defined Containers that are substituted in place of the defined element. Much like a sub record is defined with a record, sub containers allow for containers to be reused across the application or as a reference Container in another application.








Weather Forcast - Sub Containers are defined Containers that are substituted in place of the defined element. Much like a sub record is defined with a record, sub containers allow for containers to be reused across the application or as a reference Container in another application.







StyleSheet - Stands for "Cascading Style Sheet." Cascading style sheets are used to format the layout of Web pages. They can be used to define text styles, table sizes, and other aspects of Web pages that previously could only be defined in a page's HTML. ... Plus, CSS makes it easy to change styles across several pages at once.






EXPLANATION OF WEATHER APP CODE !


1.We imported react component from "react" library

2.We imported Text, View, StyleSheet, Image from " react native " framework 

3.We exported Default class that is the WeatherScreen and also extended the component

4.We created a constructor because we just created an object of a class ( usually we create a constructor whenever we create an object of a class ) 

5.We created a super keyword ( usually we create a super keyword to eliminate the confusion between superclasses and subclassess that have the methods with the same name )

6.We created this.state which refers to an object 

7.We created a function called getWeather = Async  ( meaning of async is asyncronous which means " not simultaneous " ) 

8.We created a var called " url " and pasted an api link to link it 

9.We created a keyword called " return " to return the value of the method . ( usually we create return keyword  because  The return keyword finished the execution of a method, and can be used to return a value from a method. ) 

10.And we also used " fetch " code for the url 

11.We used the code .then which is asynchronous

12.And we used Responce.json ( Responce is an object and JSON means returning of  a promise which resolves with a JavaScript object that is the result of parsing the body text as JSON )

13.We created  a function called " this.setState " 

14.And we again used Responce.json 

15.We used .catch code to catch the errors on the console

16.We used the method called " ComponentDidMount "

17.We used a function called " this.getweather " 

18.We again used another function called " render() " 

19.We created an if function called " this.state.weather "

20.We opened a view tag and used Styles.container inside it 

21.And we opened a text tag and closed it and we also closed the view tag 

22.We used a keyword called " else "

23.And we used return keyword 

24.We opened view tags and used styles.container

25.We used the same thing in the next line but we used subcontainer 

26.We used many  text , view and image tags for the png

27.We designed the Weather forcast by setting up the font size , color , stroke etc

28.We created Subcontainer , cloudImage , textContainer and we also customized the width , height , flex ,MarginTop,FlexDirection , fontsize,title, Fontweight , Positions


WEATHER APP CODE EXPLANATION COMPLETETED !
